class Solution {
    public int findLucky(int[] arr) {
        int[] cnt = new int[501];
        for (int a : arr) {
            ++cnt[a];
        }
        for (int i = 500; i > 0; --i) {
            if (cnt[i] == i) {
                return i;
            }
        }
        return -1;
    }
}

public int findLucky(int[] arr) {
        Map<Integer, Integer> freq = new HashMap<>();
        for (int a : arr) {
            freq.put(a, 1 + freq.getOrDefault(a, 0)); // Accumulate the occurrence of a.
        }
        int ans = -1;
        for (Map.Entry<Integer, Integer> e : freq.entrySet()) {
            if (e.getKey() == e.getValue()) {
                ans = Math.max(ans, e.getKey());
            }
        }
        return ans;
    }

class Solution:
    def findLucky(self, arr: List[int]) -> int:
        ans = [-1]
        for i in set(arr):
            if arr.count(i) == i:
                ans.append(i)		
        return max(ans)
